pipeline {
    agent any
     triggers { 
        pollSCM('0 */3 * * *') 
    }
     environment {
        RES1 = ' '
        RES2 = ' '
        RES3 = ' '
        RES4 = ' '
    }
    parameters {
        string(name: 'ejecutor', defaultValue: 'Hachemico', description: 'Nombre persona que realiza la accion.')
        string(name: 'motivo', defaultValue: 'Actualizar', description: 'Razon por la que se realiza la acción.')
        string(name: 'correo_notificacion', defaultValue: 'hachemico@gmail.com', description: 'Correo al que se envia la notificación.')
    }
   
    stages {
            stage('linter') {
            steps {
                sh " npm run lint "
            }
        }
        stage('test') {
            steps {
                 script{
                    sh "npm install cypress -g"
                    sh " npm ci -y"
                    sh " npm run dev &"
                    RES1 = sh( script: "NO_COLOR=1 ./node_modules/.bin/cypress run ", returnStatus: true)
                    // RES1 = sh 'echo \$?'
                }
            }
        }
        stage('Update_Readme') {
            steps {
                 script{
                    sh ("chmod 777 -R ./jenkinsScripts/Update_readme.js" )
                    RES2 = sh ( script: "node jenkinsScripts/Update_readme.js $RES1", returnStatus: true)
                }
            }
        }
        stage('push_changes') {
            steps {
                 
                    sh ("chmod 777 -R ./jenkinsScripts/Push_changes.js" )
                    withCredentials([usernamePassword(credentialsId: 'github_Token', passwordVariable: 'TOKEN', usernameVariable: 'USER')]) {
                    // withCredentials([usernamePassword(credentialsId: 'githubToken', variable: 'TOKEN')]){
                    script{
                        
                        sh(" git config --global user.email \'hachemico@gmail.com\'")
                        sh(" git remote set-url origin https://$TOKEN@github.com/hachemico/practica_jenkins.git")
                        sh(" git add .")
                        sh(" git commit -m 'Pipeline ejecutada por $params.ejecutor . MOTIVO: $params.motivo'")
                        RES3 = sh ( script: "git push origin HEAD:main ", returnStatus: true)
                    }
                }
            }
        }
        stage('Deploy_to_Vercel'){
            steps{
                
                // sh ("chmod 777 -R ./jenkinsScripts/Push_changes.js" )
                withCredentials([string(credentialsId: 'vercel_Token', variable: 'VTOKEN')]) {
                    // withCredentials([usernamePassword(credentialsId: 'githubToken', variable: 'TOKEN')]){
                    script{
                    
                        echo"${RES1}"
                        echo"${RES2}"
                        echo"${RES3}"
                    }
                }
              
            }

        }
        // stage('Parallel Stage') {
        //     parallel{
        //         stage('paralel1') {
        //             steps {
        //                 echo "Tarea Paralelo 1"
        //             }
        //         }
        //         stage('paralel2') {
        //             steps {
        //                 echo "Tarea Paralelo 2"
        //             }
        //         }
        //     }
        // }
    }
}
